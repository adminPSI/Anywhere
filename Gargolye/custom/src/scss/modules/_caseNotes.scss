.grid-container {
  background: $white;
}
.actioncenter[data-active-module='casenotes2.0'] {
  background: $white;
  padding: 0 0 20px;
  width: 100%;
}

[data-active-module='casenotes2.0'] .caseNotesModule {
  display: grid;
  grid-template-columns: auto 320px;
  grid-template-rows: auto auto auto 600px;
  grid-template-areas:
    'feedback feedback'
    'nav nav'
    'form roster'
    'cards cards';
  row-gap: 20px;

  .dateNavigation {
    //grid-column-start: span 2;
    grid-area: nav;
    order: 1;
    position: sticky;
    top: 0px;
    z-index: 99;
  }

  .caseNotesFeedback {
    border-radius: 6px;
    box-shadow: $shadow-m2;
    grid-area: feedback;
  }

  .rosterPicker {
    grid-area: roster;
    margin: 0 20px 0 10px;
    max-height: 1000px;
    order: 3;
  }

  form {
    align-content: flex-start;
    border-radius: 6px;
    box-shadow: $shadow-m2;
    padding: 10px;
    column-gap: 10px;
    display: flex;
    flex-flow: row wrap;
    grid-area: form;
    margin: 0 10px 0 20px;
    max-height: 1000px;
    order: 2;

    .input {
      flex-grow: 1;
    }

    .input.time {
      width: calc(50% - 5px);
    }
    .input.checkbox {
      margin: 0 0 14px;
      width: 100%;
    }
    .input.textarea {
      height: 200px;
    }
    .input.location,
    .input.service,
    .input.need,
    .input.contact {
      min-width: 300px;
      width: calc(50% - 5px);
    }

    button {
      margin-left: auto;
    }
  }

  .caseNotesPhrases {
    align-items: flex-end;
    display: flex;
    column-gap: 10px;
    flex-flow: row wrap;
    row-gap: 14px;

    .input.checkbox {
    }
    .input.select {
      flex-grow: 1;
      width: auto;
      margin: 0;
    }
    .button {
    }
  }

  .caseNotesOverview {
    border-radius: 6px;
    box-shadow: $shadow-m2;
    grid-column-start: span 2;
    grid-area: cards;
    margin: 0 20px;
    padding: 20px;
    order: 3;

    .input.search {
    }

    .overviewCardsWrap {
    }

    .overviewCard {
      display: flex;
      box-shadow: $shadow-m2;
      border-radius: 6px;
      column-gap: 50px;
      flex-flow: row nowrap;
      justify-content: space-between;
      padding: 14px 20px;
      margin: 0 0 8px;

      &__Left {
        display: grid;
        grid-template-columns: auto auto;
        grid-template-rows: auto auto auto;
        column-gap: 6px;

        p {
          grid-column: span 2;
        }

        button.button {
          align-self: center;
          justify-self: center;
        }
      }
      &__Center {
        max-width: 500px;
      }
      &__Right {
        display: flex;
        flex-flow: column nowrap;
        justify-content: flex-end;
      }

      .timeSpan {
        align-self: end;
        font-weight: $_bold;
        text-align: center;
        margin: 0 0 4px;
      }
      .timeDifference {
        align-self: start;
        text-align: center;
        margin: 0 0 24px;
      }
      .consumerName {
        font-size: $px20;
        font-weight: $_bold;
      }
      .serviceInfoEle {
        margin: 0 0 10px;
      }
      .noteText {
      }
      .lastEdit,
      .enteredBy {
        span {
          font-weight: $_bold;
        }
      }
    }
  }

  dialog[open] {
    display: flex;
    flex-flow: column nowrap;
    row-gap: 14px;

    &::backdrop {
      background-color: rgb(54, 106, 152);
      opacity: 0.6;
    }
  }

  .withFullscreenTextarea {
    .input.textarea {
      height: auto;
    }
  }
}

//============================================================
// NEW UI STUFF NEEDS MOVED TO ITS OWN FOLDER
//------------------------------------------------------------
[data-UI] {
  //===========================================
  // FORM
  //-------------------------------------------
  form {
    // outline: 2px dotted black;
    column-gap: 10px;
    display: flex;
    flex-flow: row wrap;

    // .cols {
    //   display: flex;
    //   flex-flow: row nowrap;
    //   column-gap: 10px;

    //   > * {
    //     flex-grow: 1;
    //   }
    // }
  }

  //===========================================
  // INPUTS
  //-------------------------------------------
  .input {
    position: relative;

    &.hidden {
      display: none;
    }

    input,
    select,
    textarea {
      background: $whitesmoke;
      border: $input_border;
      border-radius: 4px;
      color: $black;
    }

    label {
      color: $font-dark;
      font-size: 14px;
      font-weight: normal;
    }
  }

  //*-- Text ---------
  .input:not(.checkbox):not(.radio) {
    display: flex;
    flex-flow: column-reverse nowrap;
    margin: 0 0 20px;
    width: 100%;

    &.hidden {
      display: none !important;
    }
    &.withNote {
      margin: 0 0 36px;
    }

    input,
    select,
    textarea {
      display: block;
      font-size: 16px;
      padding: 10px 10px 10px 5px;
      width: 100%;

      &.active {
        border-color: $primary;
      }
      &:invalid {
        border-color: $error;
      }
      &:disabled,
      &[readonly] {
        background: $gray;
      }
    }

    textarea {
      flex-grow: 1;
    }

    label {
      margin: 0;
      position: relative;
      top: -4px;
    }

    .inputNote {
      font-size: 12px;
      position: absolute;
      left: 0px;
      bottom: -18px;
    }

    .charCount {
      font-size: 11px;
      position: absolute;
      right: 0px;
      bottom: -18px;

      span {
        padding: 0 1px;
      }
    }
  }
  .input.textarea {
    padding-top: 14px;

    .fullscreenToggleBtn {
      cursor: pointer;
      position: absolute;
      top: 0px;
      right: 8px;
      z-index: 1;

      * {
        pointer-events: none;
      }
    }
  }

  //*-- Input Group ---------
  .inputGroup {
    margin: 0 0 20px;

    &__label {
      color: $font-dark;
      font-size: 14px;
      margin: 0 0 10px;
    }
  }

  //*-- Checkbox ---------
  .input.notoggle {
    input[type='checkbox'],
    input[type='radio'] {
      opacity: 0;
      position: absolute;

      &:checked ~ label::before {
        content: '\002714';
        background-color: $primary;
        color: $white;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      &.active ~ label::before {
        border-color: $primary;
      }
      &:invalid ~ label::before {
        border-color: $error;
      }

      & ~ label {
        display: flex;
        align-items: center;

        &::before {
          content: '';
          background-color: $white;
          border: $input_border;
          border-radius: 4px;
          height: 20px;
          margin: 0 6px 0 0;
          width: 20px;

          position: relative;
          top: 0px;
        }
      }
    }
  }

  //*-- Checkbox As Toggle ---------
  .input.toggle {
    input[type='checkbox'] {
      opacity: 0;
      position: absolute;
      left: -9999px;
      top: -9999px;
    }

    input[type='checkbox'] ~ label {
      align-items: center;
      cursor: pointer;
      display: flex;
      position: relative;
      font-size: 1rem;
    }

    input[type='checkbox'] ~ label::before {
      content: '';
      background-color: $red;
      border-radius: 16px;
      border: none;
      height: 20px;
      width: 40px;
      margin-right: 0.25em;
      opacity: 0.3;
      transition: background-color 200ms ease-in-out;
    }

    input[type='checkbox'] ~ label::after {
      content: '';
      align-items: center;
      background-color: $red;
      border-radius: 16px;
      color: $white;
      display: flex;
      height: 14px;
      justify-content: center;
      left: 4px;
      position: absolute;
      width: 14px;
      transition: background-color 200ms ease-in-out, transform 200ms ease-in-out;
    }

    input[type='checkbox']:focus ~ label::before {
      outline: none;
    }
    input[type='checkbox']:checked ~ label::before {
      background-color: $secondary;
      opacity: 0.3;
    }
    input[type='checkbox']:checked ~ label::after {
      transform: translateX(130%);
      background-color: $secondary;
    }

    input[type='checkbox']:disabled ~ label {
      color: $gray;
    }
    input[type='checkbox']:disabled ~ label::before {
      background-color: rgba(211, 211, 211, 0.8);
    }
    input[type='checkbox']:disabled ~ label::after {
      background-color: $gray;
    }
  }

  //*-- Radio ---------
  .input[type='radio'] {
    margin: 0 0 10px;

    label {
      &::before {
        border-radius: 50%;
      }
    }
  }

  //===========================================
  // DROPDOWNS
  //-------------------------------------------
  .select {
    select {
      background: none;
      border: $input_border;
      border-radius: 4px;
      color: $black;
    }

    label {
      color: $font-dark;
      font-size: 14px;
      font-weight: normal;
    }
  }

  //===========================================
  // BUTTON
  //-------------------------------------------
  .button {
    border-radius: 4px;
    display: block;
    font-weight: $_bold;
    min-height: 48px;
    min-width: 48px;
    padding: 0 10px;
    text-transform: uppercase;

    //states
    &.disabled {
      background: $whitesmoke;
      opacity: 0.6;
      pointer-events: none;
    }
    // styles
    &.contained {
      color: $white;

      &.primary {
        background: $primary;
      }
      &.danger {
        background: $error;
      }
      &.warning {
        color: $black;
        background: $warning;
      }
    }
    &.outlined {
      background: none;
      border-width: 2px;
      border-style: solid;
      color: $black;

      &.primary {
        border-color: $primary;
      }
      &.danger {
        border-color: $error;
      }
      &.warning {
        border-color: $warning;
      }
    }
    &.text {
      background: none;
      border: none;
      color: $black;
    }
  }

  //===========================================
  // ICONS
  //-------------------------------------------
  .svgIcon {
    svg {
      fill: currentColor;
    }

    svg,
    path {
      pointer-events: none;
    }
  }

  .hamburger,
  .hamburger::before,
  .hamburger::after {
    display: block;
    background-color: #fff;
    position: absolute;
    height: 6px;
    width: 32px;
    border-radius: 3px;
  }

  .hamburger::before {
    content: '';
    margin-top: -8px;
  }

  .hamburger::after {
    content: '';
    margin-top: 8px;
  }

  //===========================================
  // TABLE
  //-------------------------------------------
  //* Table styles
  .ui_table {
    width: auto;

    table {
      background-color: $white;
      border-collapse: collapse;
      //border-radius: $tableBorder;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
      //overflow: hidden;
      width: 100%;

      // Table Header
      thead {
        tr {
          color: $font-light;
          background-color: $primary;
          height: 56px;

          position: sticky;
          top: 0;
          z-index: 1;
        }
      }

      // Table Body
      tbody {
        tr {
          cursor: pointer;
          height: $rowHeightRegular;
        }
      }

      // Table Rows
      tr {
        border-bottom: 1px solid rgba($black, 0.12);
      }

      // Table Header Cells
      th {
        font-size: $tableFontSize;
        font-weight: $bold;
        padding: 5px 16px;
        text-align: left;
        vertical-align: bottom;

        &[data-type='number'] {
          text-align: center;
        }
      }

      // Table Body Cells
      td {
        font-size: $tableFontSize;
        font-weight: $normal;
        padding: 5px 16px;
        text-align: left;
        vertical-align: middle;

        &[data-type='number'] {
          text-align: center;
        }
      }
    }
  }

  //* table with sortable columns
  .ui_table {
    table.colSort {
      th.sortable {
        cursor: pointer;
      }

      th.sortable:not(.asc):not(.desc)::after {
        content: '';
        display: inline-block;
        border-left: $sortBorder solid transparent;
        border-right: $sortBorder solid transparent;
        border-bottom: $sortBorder solid transparent;
        margin: 0 0 0 10px;
        width: 0;
        height: 0;
      }

      // Up arrow for <th> elements with 'asc' class
      th.sortable.asc::after {
        content: '';
        display: inline-block;
        border-left: $sortBorder solid transparent;
        border-right: $sortBorder solid transparent;
        border-bottom: $sortBorder solid $white;
        margin: 0 0 2px 10px;
        padding: 0;
        width: 0;
        height: 0;
      }

      // Down arrow for <th> elements with 'desc' class
      th.sortable.desc::after {
        content: '';
        display: inline-block;
        border-left: $sortBorder solid transparent;
        border-right: $sortBorder solid transparent;
        border-top: $sortBorder solid $white;
        margin: 0 0 0 10px;
        padding: 0 0 1px;
        width: 0;
        height: 0;
      }
    }
  }

  //* table with sortable rows
  table.rowSort {
    th:first-child {
      display: flex;
      justify-content: center;
      padding: 0;
    }
    td:first-child {
      max-width: 40px;
      margin: 0;
      padding: 0;
      pointer-events: unset;
      width: 24px;

      svg {
        width: 24px;
      }
    }
  }

  //===========================================
  // DIALOG & DIALOG MODAL
  //-------------------------------------------
  dialog {
    border: 2px solid $black;
    border-radius: 4px;
    box-shadow: $shadow-m2;
    height: 76%;
    width: 50%;
    overflow: hidden;
    padding: 0;
  }

  dialog.withFullscreenTextarea {
    padding: 10px;
    resize: both;

    .fullscreenToggleBtn {
      top: -2px;
    }

    .input.textarea {
      border: none;
      height: 100%;
      margin: 0;
      padding: 16px 0 0 0;
      width: 100%;
      resize: none;
    }
  }
}
