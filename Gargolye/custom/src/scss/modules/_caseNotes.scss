/* The main scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

/* The background of the draggable scrolling handle */
::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 10px;
}

/* On hover, make the scrolling handle lighter */
::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* The scrollbar track */
::-webkit-scrollbar-track {
  background: #f1f1f1;
}

.grid-container {
  background: $white;
}
.actioncenter[data-active-module='casenotes2.0'] {
  background: $white;
  padding: 0 0 20px;
  width: 100%;
}

[data-active-module='casenotes2.0'] {
  .caseNotesModule {
    display: grid;
    grid-template-columns: 320px auoto;
    grid-template-rows: auto auto minmax(900px, 1300px) 600px;
    grid-template-areas:
      'nav nav'
      'feedback feedback'
      'roster form'
      'cards cards';
    row-gap: 10px;

    .dateNavigation {
      //grid-column-start: span 2;
      grid-area: nav;
      order: 1;
      position: sticky;
      top: 0px;
      z-index: 99;
    }

    .validations {
      display: flex;
      column-gap: 4px;
      flex-flow: row wrap;
      grid-area: feedback;
      margin: 0 20px;
      row-gap: 8px;

      .validationMessage {
        border-radius: 20px;
        padding: 4px 14px 4px 10px;

        p {
          font-weight: $_bold;
        }
      }
    }

    .rosterPicker {
      grid-area: roster;
      margin: 0 10px 0 20px;
      order: 3;
    }

    .caseNotesForm {
      border-radius: 6px;
      box-shadow: $shadow-m2;
      grid-area: form;
      margin: 0 20px 0 10px;
      position: relative;
      order: 2;

      form {
        align-content: flex-start;
        padding: 10px;
        column-gap: 10px;
        display: flex;
        flex-flow: row wrap;

        .input {
          flex-grow: 1;
        }

        .input.time,
        .input.number {
          width: calc(50% - 5px);
        }
        .input.checkbox {
          margin: 0 0 14px;
          width: 100%;
        }
        .input.textarea {
          height: 200px;
          position: relative;
        }
        .input.location,
        .input.service,
        .input.need,
        .input.contact {
          min-width: 300px;
          width: calc(50% - 5px);
        }

        .formButtons {
          width: 100%;
        }
        button {
          margin-left: auto;
        }
      }

      // special attachments START
      form {
        .input {
          input[type='file'] {
            position: absolute;
            right: 100px;
            top: 10px;
            visibility: hidden;
          }
          input[type='file'] ~ label {
            align-items: center;
            border: 2px solid $primary;
            border-radius: 20px;
            display: flex;
            height: 40px;
            flex-flow: row nowrap;
            padding: 10px 14px;
            font-weight: 500;
            text-transform: uppercase;
          }

          &.file {
            width: auto;
            flex-grow: 0;
          }
          &.hasFile {
            input[type='file'] ~ label {
              border: 2px solid $secondary;

              .svgIcon {
                color: $error;
              }
            }
          }
        }
      }
      // special attachments END

      .dialog.insertPhrases {
        left: 6%;
        top: -40%;
      }
    }

    .caseNotesPhrases {
      align-items: flex-end;
      display: flex;
      column-gap: 10px;
      flex-flow: row wrap;
      row-gap: 14px;

      .input.select {
        flex-grow: 1;
        width: auto;
        margin: 0;
      }
    }

    .caseNotesOverview {
      border-radius: 6px;
      box-shadow: $shadow-m2;
      grid-area: cards;
      margin: 0 20px;
      padding: 20px;
      order: 3;

      .overviewCardsHeader {
        // do stuff son
      }

      .overviewCardsWrap {
        display: grid;
        grid-template-columns: minmax(auto, 140px) minmax(auto, 140px) minmax(auto, 180px) auto auto;
      }

      .overviewCard {
        align-items: center;
        box-shadow: $shadow-m2;
        border-radius: 6px;
        display: grid;
        grid-template-columns: subgrid;
        grid-column: 1 / -1;
        padding: 0;
        margin: 0 0 8px;
        row-gap: 14px;

        &Main {
          grid-column: 1 / -1;
          padding: 0 10px 20px;

          .consumerName {
            font-size: $px30;
            font-weight: $_bold;
            letter-spacing: 0.04rem;
            margin-bottom: 4px;
          }
          .serviceInfoEle {
            font-size: $px18;
            font-weight: $_bold;
            letter-spacing: 0.04rem;
            margin-bottom: 8px;
          }
          .noteText {
            font-size: $px16;
            font-weight: $_normal;
          }
        }

        .withLabelWrap {
          //border-bottom: 2px solid $black;
          padding: 8px;
        }

        .withLabel {
          font-size: $px24;
          font-weight: $_bold;
          position: relative;
          margin-top: 20px;
        }
        .withLabel::before {
          font-size: $px14;
          font-weight: $_normal;
          position: absolute;
          top: -20px;
          left: 0px;
        }
        .startTime::before {
          content: 'Start Time';
        }
        .endTime::before {
          content: 'End Time';
        }
        .duration::before {
          content: 'Total';
        }
        .enteredBy::before {
          content: 'Entered By';
        }
        .consumer::before {
          content: 'Consumer';
        }
      }
    }
  }

  dialog.modal[open] {
    display: flex;
    flex-flow: column nowrap;
    row-gap: 14px;

    &::backdrop {
      background-color: rgb(54, 106, 152);
      opacity: 0.6;
    }
  }

  dialog.modal.fullscreenTextarea {
    .input.textarea {
      height: auto;
    }
  }

  dialog.insertPhrases[open] {
    border: none;
    box-shadow: $shadow-m2;
    display: flex;
    flex-flow: column nowrap;
    left: 10%;
    top: 6%;
    margin: 0;
    max-height: 500px;
    padding: 0;
    min-width: 400px;
    width: 60%;
    max-width: 800px;
    z-index: 99;

    .phraseWrap {
      overflow-y: scroll;
      overflow-x: hidden;
      padding: 0px 4px 0 12px;
    }
    .phraseView {
      margin: 0;
      padding: 20px 10px 15px;
    }
    .phrase {
      //border: 2px solid $black;
      box-shadow: $shadow-m2;
      border-radius: 6px;
      cursor: pointer;
      display: flex;
      flex-flow: column nowrap;
      margin: 0 8px 10px 0;
      padding: 4px;

      * {
        pointer-events: none;
      }

      .shortcut {
        font-weight: $_bold;
      }
      // .phraseText {
      // }
    }
  }
}

//============================================================
// NEW UI STUFF NEEDS MOVED TO ITS OWN FOLDER
//------------------------------------------------------------
[data-UI] {
  //===========================================
  // FORM
  //-------------------------------------------
  form {
    // outline: 2px dotted black;
    column-gap: 10px;
    display: flex;
    flex-flow: row wrap;

    // .cols {
    //   display: flex;
    //   flex-flow: row nowrap;
    //   column-gap: 10px;

    //   > * {
    //     flex-grow: 1;
    //   }
    // }
  }

  //===========================================
  // INPUTS
  //-------------------------------------------
  .input {
    position: relative;

    &.hidden {
      display: none;
    }

    input,
    select,
    textarea {
      background: $whitesmoke;
      border: $input_border;
      border-radius: 4px;
      color: $black;
    }

    label {
      color: $font-dark;
      font-size: 14px;
      font-weight: normal;
    }
  }

  //*-- Text ---------
  .input:not(.checkbox):not(.radio) {
    display: flex;
    flex-flow: column-reverse nowrap;
    margin-bottom: 20px;
    width: 100%;

    &.hidden {
      display: none !important;
    }
    &.withNote {
      margin-bottom: 36px;
    }

    input,
    select,
    textarea {
      display: block;
      font-size: 16px;
      padding: 10px 10px 10px 5px;
      width: 100%;

      &.active {
        border-color: $primary;
      }
      &:invalid {
        border-color: $error;
      }
      &:disabled,
      &[readonly] {
        background: $gray;
      }
    }

    textarea {
      flex-grow: 1;
    }

    label {
      margin: 0;
      position: relative;
      top: -4px;
    }

    .inputNote {
      font-size: 12px;
      position: absolute;
      left: 0px;
      bottom: -18px;
    }

    .charCount {
      font-size: 11px;
      position: absolute;
      right: 0px;
      bottom: -18px;

      span {
        padding: 0 1px;
      }
    }
  }
  .input.textarea {
    margin-top: 20px;

    .fullscreenToggleBtn,
    .speechToTextBtn {
      cursor: pointer;
      border-radius: 2px;
      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
      position: absolute;
      outline: 1px solid $black;
      padding: 4px;
      top: -22px;
      z-index: 1;

      * {
        pointer-events: none;
      }
    }

    .speechToTextBtn {
      color: $white;
      background-color: $secondary;
      right: 50px;

      &.off {
        color: $font-dark;
        background-color: $gray;
      }
    }
    .fullscreenToggleBtn {
      background-color: $whitesmoke;
      right: 8px;
    }
  }

  //*-- Input Group ---------
  .inputGroup {
    margin: 0 0 20px;

    &__label {
      color: $font-dark;
      font-size: 14px;
      margin: 0 0 10px;
    }
  }

  //*-- Checkbox ---------
  .input.notoggle {
    input[type='checkbox'],
    input[type='radio'] {
      opacity: 0;
      position: absolute;

      &:checked ~ label::before {
        content: '\002714';
        background-color: $primary;
        color: $white;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      &.active ~ label::before {
        border-color: $primary;
      }
      &:invalid ~ label::before {
        border-color: $error;
      }

      & ~ label {
        display: flex;
        align-items: center;

        &::before {
          content: '';
          background-color: $white;
          border: $input_border;
          border-radius: 4px;
          height: 20px;
          margin: 0 6px 0 0;
          width: 20px;

          position: relative;
          top: 0px;
        }
      }
    }
  }

  //*-- Checkbox As Toggle ---------
  .input.toggle {
    input[type='checkbox'] {
      opacity: 0;
      position: absolute;
      left: -9999px;
      top: -9999px;
    }

    input[type='checkbox'] ~ label {
      align-items: center;
      cursor: pointer;
      display: flex;
      position: relative;
      font-size: 1rem;
    }

    input[type='checkbox'] ~ label::before {
      content: '';
      background-color: $red;
      border-radius: 16px;
      border: none;
      height: 20px;
      width: 40px;
      margin-right: 0.25em;
      opacity: 0.3;
      transition: background-color 200ms ease-in-out;
    }

    input[type='checkbox'] ~ label::after {
      content: '';
      align-items: center;
      background-color: $red;
      border-radius: 16px;
      color: $white;
      display: flex;
      height: 14px;
      justify-content: center;
      left: 4px;
      position: absolute;
      width: 14px;
      transition: background-color 200ms ease-in-out, transform 200ms ease-in-out;
    }

    input[type='checkbox']:focus ~ label::before {
      outline: none;
    }
    input[type='checkbox']:checked ~ label::before {
      background-color: $secondary;
      opacity: 0.3;
    }
    input[type='checkbox']:checked ~ label::after {
      transform: translateX(130%);
      background-color: $secondary;
    }

    input[type='checkbox']:disabled ~ label {
      color: $gray;
    }
    input[type='checkbox']:disabled ~ label::before {
      background-color: rgba(211, 211, 211, 0.8);
    }
    input[type='checkbox']:disabled ~ label::after {
      background-color: $gray;
    }
  }

  //*-- Radio ---------
  .input[type='radio'] {
    margin: 0 0 10px;

    label {
      &::before {
        border-radius: 50%;
      }
    }
  }

  //===========================================
  // DROPDOWNS
  //-------------------------------------------
  .select {
    select {
      background: none;
      border: $input_border;
      border-radius: 4px;
      color: $black;
    }

    label {
      color: $font-dark;
      font-size: 14px;
      font-weight: normal;
    }
  }

  //===========================================
  // BUTTON
  //-------------------------------------------
  .button {
    border-radius: 4px;
    display: block;
    font-weight: $_bold;
    min-height: 40px;
    min-width: 48px;
    padding: 0 10px;
    text-transform: uppercase;

    &.icon {
      display: flex;
      align-items: center;
      column-gap: 4px;
    }

    //states
    &.disabled {
      background: $gray;
      opacity: 0.6;
      pointer-events: none;
    }
    // styles
    &.contained {
      color: $white;

      &.primary {
        background: $primary;
      }
      &.danger {
        background: $error;
      }
      &.warning {
        color: $black;
        background: $warning;
      }
    }
    &.outlined {
      background: none;
      border-width: 3px;
      border-style: solid;
      color: $black;

      &.primary {
        border-color: $primary;

        span {
          color: $primary;
        }
      }
      &.danger {
        border-color: $error;

        span {
          color: $error;
        }
      }
      &.warning {
        border-color: $warning;
      }
    }
    &.text {
      background: none;
      border: none;
      color: $black;
    }
  }

  //===========================================
  // ICONS
  //-------------------------------------------
  .svgIcon {
    display: block;

    svg {
      display: block;
      fill: currentColor;
    }

    svg,
    path {
      pointer-events: none;
    }
  }

  .hamburger,
  .hamburger::before,
  .hamburger::after {
    display: block;
    background-color: #fff;
    position: absolute;
    height: 6px;
    width: 32px;
    border-radius: 3px;
  }

  .hamburger::before {
    content: '';
    margin-top: -8px;
  }

  .hamburger::after {
    content: '';
    margin-top: 8px;
  }

  //===========================================
  // TABLE
  //-------------------------------------------
  //* Table styles
  .ui_table {
    width: auto;

    table {
      background-color: $white;
      border-collapse: collapse;
      //border-radius: $tableBorder;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
      //overflow: hidden;
      width: 100%;

      // Table Header
      thead {
        tr {
          color: $font-light;
          background-color: $primary;
          height: 56px;

          position: sticky;
          top: 0;
          z-index: 1;
        }
      }

      // Table Body
      tbody {
        tr {
          cursor: pointer;
          height: $rowHeightRegular;
        }
      }

      // Table Rows
      tr {
        border-bottom: 1px solid rgba($black, 0.12);
      }

      // Table Header Cells
      th {
        font-size: $tableFontSize;
        font-weight: $bold;
        padding: 5px 16px;
        text-align: left;
        vertical-align: bottom;

        &[data-type='number'] {
          text-align: center;
        }
      }

      // Table Body Cells
      td {
        font-size: $tableFontSize;
        font-weight: $normal;
        padding: 5px 16px;
        text-align: left;
        vertical-align: middle;

        &[data-type='number'] {
          text-align: center;
        }
      }
    }
  }

  //* table with sortable columns
  .ui_table {
    table.colSort {
      th.sortable {
        cursor: pointer;
      }

      th.sortable:not(.asc):not(.desc)::after {
        content: '';
        display: inline-block;
        border-left: $sortBorder solid transparent;
        border-right: $sortBorder solid transparent;
        border-bottom: $sortBorder solid transparent;
        margin: 0 0 0 10px;
        width: 0;
        height: 0;
      }

      // Up arrow for <th> elements with 'asc' class
      th.sortable.asc::after {
        content: '';
        display: inline-block;
        border-left: $sortBorder solid transparent;
        border-right: $sortBorder solid transparent;
        border-bottom: $sortBorder solid $white;
        margin: 0 0 2px 10px;
        padding: 0;
        width: 0;
        height: 0;
      }

      // Down arrow for <th> elements with 'desc' class
      th.sortable.desc::after {
        content: '';
        display: inline-block;
        border-left: $sortBorder solid transparent;
        border-right: $sortBorder solid transparent;
        border-top: $sortBorder solid $white;
        margin: 0 0 0 10px;
        padding: 0 0 1px;
        width: 0;
        height: 0;
      }
    }
  }

  //* table with sortable rows
  table.rowSort {
    th:first-child {
      display: flex;
      justify-content: center;
      padding: 0;
    }
    td:first-child {
      max-width: 40px;
      margin: 0;
      padding: 0;
      pointer-events: unset;
      width: 24px;

      svg {
        width: 24px;
      }
    }
  }

  //===========================================
  // DIALOG & DIALOG MODAL
  //-------------------------------------------
  dialog {
    border: 2px solid $black;
    border-radius: 4px;
    overflow: hidden;
    padding: 0;

    &.modal {
      box-shadow: $shadow-m2;
      height: 76%;
      width: 50%;
    }
  }

  dialog.modal.fullscreenTextarea {
    padding: 10px;
    resize: both;

    .fullscreenToggleBtn {
      background-color: transparent;
      box-shadow: none;
      outline: none;
      right: 0px;
      top: -5px;
    }

    .input.textarea {
      border: none;
      height: 100%;
      margin: 0;
      padding: 16px 0 0 0;
      width: 100%;
      resize: none;

      &.withNote {
        margin-bottom: 16px;
      }
    }
  }

  //===========================================
  // VALIDATIONS
  //-------------------------------------------
  .validations {
    border-radius: 6px;
    box-shadow: $shadow-m2;
    padding: 12px 10px;

    .validationErros {
      .validationMessage {
        background-color: rgba(219, 22, 47, 0.4);

        .iconWrap {
          background-color: transparent;
          height: 24px;
          width: 24px;
          perspective: 1000px;
        }

        .iconInner {
          height: 100%;
          position: relative;
          transform-style: preserve-3d;
          transition: transform 1s;
          width: 100%;
        }

        .svgIcon {
          color: $error;
          position: absolute;
          backface-visibility: hidden;
          transition: opacity 0.2s;

          &:first-child {
            // error icon
            opacity: 1;
          }
          &:last-child {
            // checkmark icon
            color: $secondary;
            opacity: 0;
            transform: rotateY(180deg);
          }
        }

        &.valid {
          background-color: rgba(129, 185, 65, 0.4);

          .iconInner {
            transform: rotateY(180deg);
          }

          .svgIcon:first-child {
            // error icon
            opacity: 0;
          }
          .svgIcon:last-child {
            // checkmark icon
            opacity: 1;
          }
        }
      }
    }

    .validationWarnings {
      .validationMessage {
        background-color: rgba(255, 200, 87, 0.4);

        .svgIcon {
          color: $warning;
        }
      }
    }

    .validationMessage {
      align-items: center;
      column-gap: 4px;
      display: flex;
      flex-flow: row nowrap;

      &.hidden {
        display: none;
      }
    }
  }
}
